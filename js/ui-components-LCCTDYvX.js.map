{"version":3,"file":"ui-components-LCCTDYvX.js","sources":["../../src/modules/ui-components.js"],"sourcesContent":["/**\n * UI Components Module\n * Handles panel toolbox, progress bars, and toast notifications\n * Modernized from jQuery to vanilla JavaScript\n */\n\n// Modern DOM utilities (jQuery replacement)\nconst DOM = {\n  select: selector => document.querySelector(selector),\n  selectAll: selector => [...document.querySelectorAll(selector)],\n  on: (element, event, handler) => element.addEventListener(event, handler),\n  find: (element, selector) => element.querySelector(selector),\n  closest: (element, selector) => element.closest(selector),\n  addClass: (element, className) => element.classList.add(className),\n  removeClass: (element, className) => element.classList.remove(className),\n  toggle: (element, className) => element.classList.toggle(className),\n  slideUp: (element, duration = 300) => {\n    element.style.transition = `height ${duration}ms ease`;\n    element.style.overflow = 'hidden';\n    element.style.height = element.offsetHeight + 'px';\n    element.offsetHeight; // Force reflow\n    element.style.height = '0px';\n    setTimeout(() => {\n      element.style.display = 'none';\n    }, duration);\n  },\n  slideDown: (element, duration = 300) => {\n    element.style.display = 'block';\n    const height = element.scrollHeight;\n    element.style.height = '0px';\n    element.style.transition = `height ${duration}ms ease`;\n    element.style.overflow = 'hidden';\n    element.offsetHeight; // Force reflow\n    element.style.height = height + 'px';\n    setTimeout(() => {\n      element.style.height = '';\n      element.style.overflow = '';\n      element.style.transition = '';\n    }, duration);\n  }\n};\n\n/**\n * Panel Toolbox Functionality\n * Modernized from jQuery event handlers\n */\nexport function initializePanelToolbox() {\n  // Close panel functionality - MODERNIZED\n  DOM.selectAll('.close-link').forEach(link => {\n    DOM.on(link, 'click', function (e) {\n      e.preventDefault();\n      const panel = DOM.closest(this, '.x_panel');\n      if (panel) {\n        DOM.slideUp(panel);\n      }\n    });\n  });\n\n  // Collapse panel functionality - MODERNIZED\n  DOM.selectAll('.collapse-link').forEach(link => {\n    DOM.on(link, 'click', function (e) {\n      e.preventDefault();\n      const panel = DOM.closest(this, '.x_panel');\n      const content = DOM.find(panel, '.x_content');\n      const icon = DOM.find(this, 'i');\n\n      if (content && icon) {\n        if (content.style.display === 'none') {\n          DOM.slideDown(content);\n          DOM.removeClass(icon, 'fa-chevron-down');\n          DOM.addClass(icon, 'fa-chevron-up');\n        } else {\n          DOM.slideUp(content);\n          DOM.removeClass(icon, 'fa-chevron-up');\n          DOM.addClass(icon, 'fa-chevron-down');\n        }\n      }\n    });\n  });\n\n  console.log('✅ Panel toolbox initialized (jQuery-free)');\n}\n\n/**\n * Progress Bar Animations\n * Already modern - moved from init.js\n */\nexport function initializeProgressBars() {\n  // Animate all progress bars with data-transitiongoal\n  const progressBars = DOM.selectAll('.progress-bar[data-transitiongoal]');\n\n  progressBars.forEach(bar => {\n    const targetPercent = parseInt(bar.getAttribute('data-transitiongoal'), 10);\n    const displayText = bar.getAttribute('data-display-text') !== 'false';\n\n    // Remove any inline width styles to allow animation\n    bar.style.removeProperty('width');\n\n    // Set initial state with !important to override any CSS\n    bar.style.setProperty('width', '0%', 'important');\n    bar.setAttribute('aria-valuenow', '0');\n\n    // Animate to target value\n    setTimeout(() => {\n      bar.style.setProperty('transition', 'width 1s ease-in-out', 'important');\n      bar.style.setProperty('width', targetPercent + '%', 'important');\n      bar.setAttribute('aria-valuenow', targetPercent);\n\n      if (displayText) {\n        bar.textContent = targetPercent + '%';\n      }\n    }, 100);\n  });\n\n  // Handle App Versions progress bars (widget_summary containers)\n  const appVersionBars = DOM.selectAll('.widget_summary .progress-bar');\n  appVersionBars.forEach(bar => {\n    // Skip if already processed with data-transitiongoal\n    if (bar.getAttribute('data-transitiongoal')) {\n      return;\n    }\n\n    // Extract target percentage from inline style\n    const inlineWidth = bar.style.width;\n    if (inlineWidth && inlineWidth.includes('%')) {\n      const targetPercent = parseInt(inlineWidth.replace('%', ''), 10);\n\n      // Remove inline width and animate\n      bar.style.removeProperty('width');\n      bar.style.setProperty('width', '0%', 'important');\n      bar.setAttribute('aria-valuenow', '0');\n\n      // Animate to target value with delay for staggered effect\n      const delay = Array.from(appVersionBars).indexOf(bar) * 100 + 200;\n      setTimeout(() => {\n        bar.style.setProperty('transition', 'width 1s ease-in-out', 'important');\n        bar.style.setProperty('width', targetPercent + '%', 'important');\n        bar.setAttribute('aria-valuenow', targetPercent);\n      }, delay);\n    }\n  });\n\n  // For other progress bars without data-transitiongoal, just show them immediately\n  const staticProgressBars = DOM.selectAll('.progress-bar:not([data-transitiongoal])');\n  staticProgressBars.forEach(bar => {\n    // Skip App Versions bars as they're handled above\n    if (DOM.closest(bar, '.widget_summary')) {\n      return;\n    }\n\n    const currentPercent = bar.style.width || bar.getAttribute('aria-valuenow') + '%' || '0%';\n    bar.style.width = currentPercent;\n  });\n\n  console.log('✅ Progress bars initialized (jQuery-free)');\n}\n\n/**\n * Toast Notifications\n * Bootstrap 5 native implementation - MODERNIZED\n */\nexport function initializeToasts() {\n  // Initialize all toast elements\n  const toastElements = DOM.selectAll('.toast');\n\n  toastElements.forEach(toastEl => {\n    // Use Bootstrap 5 native Toast API instead of jQuery plugin\n    if (typeof bootstrap !== 'undefined' && bootstrap.Toast) {\n      const toast = new bootstrap.Toast(toastEl);\n\n      // Auto-show toasts marked with data-show\n      if (toastEl.getAttribute('data-show') === 'true') {\n        toast.show();\n      }\n    }\n  });\n\n  console.log('✅ Toasts initialized (jQuery-free)');\n}\n\n/**\n * Bootstrap Component Initialization\n * Using Bootstrap 5 native APIs - MODERNIZED\n */\nexport function initializeBootstrapComponents() {\n  // Initialize tooltips - MODERNIZED from jQuery\n  if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {\n    DOM.selectAll('[data-bs-toggle=\"tooltip\"]').forEach(element => {\n      new bootstrap.Tooltip(element);\n    });\n  }\n\n  // Initialize popovers - MODERNIZED from jQuery\n  if (typeof bootstrap !== 'undefined' && bootstrap.Popover) {\n    DOM.selectAll('[data-bs-toggle=\"popover\"]').forEach(element => {\n      new bootstrap.Popover(element);\n    });\n  }\n\n  console.log('✅ Bootstrap components initialized (jQuery-free)');\n}\n\n/**\n * Switchery Toggle Switches\n * Modern implementation - ALREADY MODERN\n */\nexport function initializeSwitchery() {\n  if (typeof Switchery === 'undefined') {\n    console.warn('⚠️ Switchery library not available');\n    return;\n  }\n\n  DOM.selectAll('.js-switch').forEach(element => {\n    if (!element.switchery) {\n      // Avoid double initialization\n      new Switchery(element, {\n        color: '#26B99A',\n        size: 'small'\n      });\n    }\n  });\n\n  console.log('✅ Switchery initialized (jQuery-free)');\n}\n\n// Export DOM utilities for other modules\nexport { DOM };\n\n// Auto-initialize when module loads\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', () => {\n    initializePanelToolbox();\n    initializeProgressBars();\n    initializeToasts();\n    initializeBootstrapComponents();\n    initializeSwitchery();\n  });\n}\n"],"names":["DOM","select","selector","document","querySelector","selectAll","querySelectorAll","on","element","event","handler","addEventListener","find","closest","addClass","className","classList","add","removeClass","remove","toggle","slideUp","duration","style","transition","overflow","height","offsetHeight","setTimeout","display","slideDown","scrollHeight","initializePanelToolbox","forEach","link","e","preventDefault","panel","this","content","icon","initializeProgressBars","bar","targetPercent","parseInt","getAttribute","displayText","removeProperty","setProperty","setAttribute","textContent","appVersionBars","inlineWidth","width","includes","replace","delay","Array","from","indexOf","currentPercent","initializeToasts","toastEl","bootstrap","Toast","toast","show","initializeBootstrapComponents","Tooltip","Popover","initializeSwitchery","Switchery","switchery","color","size"],"mappings":"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"}