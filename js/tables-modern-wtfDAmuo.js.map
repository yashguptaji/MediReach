{"version":3,"file":"tables-modern-wtfDAmuo.js","sources":["../../src/modules/tables-modern.js"],"sourcesContent":["/**\n * Modern Tables Module - jQuery-Free DataTables\n * Uses DataTables 2.x with native JavaScript and Bootstrap 5\n * Completely eliminates jQuery dependency for tables\n */\n\n// Import DataTables with Bootstrap 5 styling (jQuery-free)\nimport DataTable from 'datatables.net-bs5';\nimport 'datatables.net-responsive-bs5';\nimport 'datatables.net-buttons-bs5';\nimport 'datatables.net-fixedheader';\nimport 'datatables.net-keytable';\n\n// Modern DOM utilities\nconst DOM = {\n  select: selector => document.querySelector(selector),\n  selectAll: selector => [...document.querySelectorAll(selector)],\n  exists: selector => document.querySelector(selector) !== null,\n  getAttribute: (element, attr) => element?.getAttribute(attr),\n  addClass: (element, className) => element?.classList.add(className),\n  removeClass: (element, className) => element?.classList.remove(className)\n};\n\n/**\n * Initialize Modern DataTables - JQUERY ELIMINATED\n * Uses DataTables 2.x native JavaScript API\n */\nexport function initializeModernDataTables() {\n  console.log('üéØ Initializing modern DataTables (jQuery-free)...');\n\n  // Find all tables marked for DataTable initialization\n  const tableElements = DOM.selectAll('.datatable, [data-table], .table-responsive table');\n\n  if (tableElements.length === 0) {\n    console.log('‚ÑπÔ∏è No tables found for DataTable initialization');\n    return;\n  }\n\n  const initializedTables = [];\n\n  tableElements.forEach(table => {\n    try {\n      // Skip if already initialized\n      if (table.dataTableInstance) {\n        return;\n      }\n\n      // Get configuration from data attributes\n      const config = getTableConfig(table);\n\n      // Initialize DataTable with modern JavaScript (no jQuery)\n      const dataTable = new DataTable(table, config);\n\n      // Store reference for external access\n      table.dataTableInstance = dataTable;\n      initializedTables.push({ table, instance: dataTable });\n\n      console.log(`‚úÖ DataTable initialized: ${table.id || 'table-' + initializedTables.length}`);\n    } catch (error) {\n      console.error('‚ùå Failed to initialize DataTable:', error);\n    }\n  });\n\n  // Initialize specific table implementations\n  initializeAdvancedTables();\n  initializeExportTables();\n  initializeResponsiveTables();\n\n  console.log(`‚úÖ ${initializedTables.length} DataTables initialized successfully`);\n  return initializedTables;\n}\n\n/**\n * Get table configuration from data attributes\n */\nfunction getTableConfig(table) {\n  const baseConfig = {\n    // Bootstrap 5 styling (built-in with datatables.net-bs5)\n    responsive: true,\n    autoWidth: false,\n\n    // Modern pagination\n    pagingType: 'simple_numbers',\n\n    // Language configuration\n    language: {\n      search: 'Search:',\n      lengthMenu: 'Show _MENU_ entries',\n      info: 'Showing _START_ to _END_ of _TOTAL_ entries',\n      infoEmpty: 'Showing 0 to 0 of 0 entries',\n      infoFiltered: '(filtered from _MAX_ total entries)',\n      paginate: {\n        first: 'First',\n        last: 'Last',\n        next: 'Next',\n        previous: 'Previous'\n      },\n      emptyTable: 'No data available in table',\n      zeroRecords: 'No matching records found'\n    },\n\n    // Bootstrap 5 compatible DOM structure\n    dom:\n      '<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6\"f>>' +\n      '<\"row\"<\"col-sm-12\"tr>>' +\n      '<\"row\"<\"col-sm-12 col-md-5\"i><\"col-sm-12 col-md-7\"p>>'\n  };\n\n  // Get configuration from data attributes\n  const pageLength = parseInt(DOM.getAttribute(table, 'data-page-length')) || 10;\n  const searching = DOM.getAttribute(table, 'data-searching') !== 'false';\n  const ordering = DOM.getAttribute(table, 'data-ordering') !== 'false';\n  const paging = DOM.getAttribute(table, 'data-paging') !== 'false';\n  const info = DOM.getAttribute(table, 'data-info') !== 'false';\n  const responsive = DOM.getAttribute(table, 'data-responsive') !== 'false';\n\n  return {\n    ...baseConfig,\n    pageLength,\n    searching,\n    ordering,\n    paging,\n    info,\n    responsive\n  };\n}\n\n/**\n * Advanced Tables with Custom Features\n */\nfunction initializeAdvancedTables() {\n  // Tables with custom search functionality\n  DOM.selectAll('.advanced-table').forEach(table => {\n    if (table.dataTableInstance) {\n      const dataTable = table.dataTableInstance;\n\n      // Add custom search functionality\n      const customSearch = DOM.select(`[data-table-search=\"${table.id}\"]`);\n      if (customSearch) {\n        customSearch.addEventListener('input', function () {\n          dataTable.search(this.value).draw();\n        });\n      }\n\n      // Add column-specific filters\n      DOM.selectAll(`[data-column-filter=\"${table.id}\"]`).forEach(filter => {\n        const columnIndex = parseInt(DOM.getAttribute(filter, 'data-column'));\n        filter.addEventListener('change', function () {\n          dataTable.column(columnIndex).search(this.value).draw();\n        });\n      });\n    }\n  });\n}\n\n/**\n * Tables with Export Functionality\n */\nfunction initializeExportTables() {\n  DOM.selectAll('.export-table, [data-export]').forEach(table => {\n    if (!table.dataTableInstance) {\n      return;\n    }\n\n    try {\n      // Add export buttons using DataTables buttons extension\n      const dataTable = table.dataTableInstance;\n\n      // Configure export buttons\n      const exportConfig = {\n        dom: 'Bfrtip',\n        buttons: [\n          {\n            extend: 'copy',\n            text: 'Copy',\n            className: 'btn btn-secondary btn-sm'\n          },\n          {\n            extend: 'csv',\n            text: 'CSV',\n            className: 'btn btn-success btn-sm'\n          },\n          {\n            extend: 'excel',\n            text: 'Excel',\n            className: 'btn btn-primary btn-sm'\n          },\n          {\n            extend: 'pdf',\n            text: 'PDF',\n            className: 'btn btn-danger btn-sm'\n          },\n          {\n            extend: 'print',\n            text: 'Print',\n            className: 'btn btn-info btn-sm'\n          }\n        ]\n      };\n\n      // Update table configuration with buttons\n      dataTable.destroy();\n      const newTable = new DataTable(table, {\n        ...getTableConfig(table),\n        ...exportConfig\n      });\n\n      table.dataTableInstance = newTable;\n\n      console.log(`‚úÖ Export functionality added to table: ${table.id || 'unnamed'}`);\n    } catch (error) {\n      console.error('‚ùå Failed to add export functionality:', error);\n    }\n  });\n}\n\n/**\n * Responsive Tables with Mobile Optimization\n */\nfunction initializeResponsiveTables() {\n  DOM.selectAll('.responsive-table').forEach(table => {\n    if (!table.dataTableInstance) {\n      return;\n    }\n\n    const dataTable = table.dataTableInstance;\n\n    // Add responsive breakpoint handling\n    dataTable.on('responsive-display', function (e, datatable, row, showHide, update) {\n      if (showHide) {\n        // Row details shown\n        DOM.addClass(row.node(), 'row-details-open');\n      } else {\n        // Row details hidden\n        DOM.removeClass(row.node(), 'row-details-open');\n      }\n    });\n\n    // Add mobile-friendly search\n    if (window.innerWidth < 768) {\n      const searchInput = DOM.select('.dataTables_filter input', table.parentNode);\n      if (searchInput) {\n        searchInput.placeholder = 'Search...';\n        DOM.addClass(searchInput, 'form-control-sm');\n      }\n    }\n  });\n}\n\n/**\n * Real-time Table Updates - MODERN IMPLEMENTATION\n */\nexport function updateTableData(tableId, newData) {\n  const table = DOM.select(`#${tableId}`);\n  if (!table || !table.dataTableInstance) {\n    console.warn(`‚ö†Ô∏è Table not found or not initialized: ${tableId}`);\n    return false;\n  }\n\n  try {\n    const dataTable = table.dataTableInstance;\n\n    // Clear existing data\n    dataTable.clear();\n\n    // Add new data\n    dataTable.rows.add(newData);\n\n    // Redraw table\n    dataTable.draw();\n\n    console.log(`‚úÖ Table data updated: ${tableId}`);\n    return true;\n  } catch (error) {\n    console.error('‚ùå Failed to update table data:', error);\n    return false;\n  }\n}\n\n/**\n * Table Utility Functions - MODERN IMPLEMENTATION\n */\nexport const TableUtils = {\n  /**\n   * Get table data as array\n   */\n  getTableData(tableId) {\n    const table = DOM.select(`#${tableId}`);\n    if (table && table.dataTableInstance) {\n      return table.dataTableInstance.rows().data().toArray();\n    }\n    return [];\n  },\n\n  /**\n   * Add row to table\n   */\n  addRow(tableId, rowData) {\n    const table = DOM.select(`#${tableId}`);\n    if (table && table.dataTableInstance) {\n      table.dataTableInstance.row.add(rowData).draw();\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * Remove row from table\n   */\n  removeRow(tableId, rowIndex) {\n    const table = DOM.select(`#${tableId}`);\n    if (table && table.dataTableInstance) {\n      table.dataTableInstance.row(rowIndex).remove().draw();\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * Search table\n   */\n  searchTable(tableId, searchTerm) {\n    const table = DOM.select(`#${tableId}`);\n    if (table && table.dataTableInstance) {\n      table.dataTableInstance.search(searchTerm).draw();\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * Export table data\n   */\n  exportTable(tableId, format = 'csv') {\n    const table = DOM.select(`#${tableId}`);\n    if (table && table.dataTableInstance) {\n      const dataTable = table.dataTableInstance;\n\n      switch (format.toLowerCase()) {\n        case 'csv':\n          dataTable.button('.buttons-csv').trigger();\n          break;\n        case 'excel':\n          dataTable.button('.buttons-excel').trigger();\n          break;\n        case 'pdf':\n          dataTable.button('.buttons-pdf').trigger();\n          break;\n        case 'print':\n          dataTable.button('.buttons-print').trigger();\n          break;\n        default:\n          console.warn(`‚ö†Ô∏è Unsupported export format: ${format}`);\n          return false;\n      }\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * Destroy all tables\n   */\n  destroyAllTables() {\n    DOM.selectAll('.datatable, [data-table]').forEach(table => {\n      if (table.dataTableInstance) {\n        table.dataTableInstance.destroy();\n        table.dataTableInstance = null;\n      }\n    });\n    console.log('‚úÖ All DataTables destroyed');\n  },\n\n  /**\n   * Reinitialize table\n   */\n  reinitializeTable(tableId) {\n    const table = DOM.select(`#${tableId}`);\n    if (table) {\n      if (table.dataTableInstance) {\n        table.dataTableInstance.destroy();\n      }\n\n      const dataTable = new DataTable(table, getTableConfig(table));\n      table.dataTableInstance = dataTable;\n\n      console.log(`‚úÖ Table reinitialized: ${tableId}`);\n      return true;\n    }\n    return false;\n  }\n};\n\n/**\n * Initialize Sample Data Tables for Demo\n */\nexport function initializeSampleTables() {\n  // Sample data for demonstration\n  const sampleData = [\n    ['John Doe', 'Software Engineer', 'New York', '$85,000', '2023-01-15'],\n    ['Jane Smith', 'Product Manager', 'San Francisco', '$120,000', '2022-08-20'],\n    ['Mike Johnson', 'Designer', 'Los Angeles', '$75,000', '2023-03-10'],\n    ['Sarah Wilson', 'Data Scientist', 'Chicago', '$95,000', '2022-12-05'],\n    ['David Brown', 'DevOps Engineer', 'Seattle', '$110,000', '2023-02-28']\n  ];\n\n  // Create sample table if demo container exists\n  const demoContainer = DOM.select('#demo-table-container');\n  if (demoContainer) {\n    const tableHTML = `\n      <table id=\"demo-table\" class=\"table table-striped table-bordered\">\n        <thead class=\"table-dark\">\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Location</th>\n            <th>Salary</th>\n            <th>Start Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${sampleData\n    .map(row => `<tr>${row.map(cell => `<td>${cell}</td>`).join('')}</tr>`)\n    .join('')}\n        </tbody>\n      </table>\n    `;\n\n    demoContainer.innerHTML = tableHTML;\n\n    // Initialize the demo table\n    const demoTable = new DataTable('#demo-table', {\n      responsive: true,\n      pageLength: 5,\n      dom: 'Bfrtip',\n      buttons: ['copy', 'csv', 'excel', 'pdf', 'print']\n    });\n\n    console.log('‚úÖ Demo table created and initialized');\n  }\n}\n\n// Auto-initialize when DOM is ready\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', () => {\n    // Initialize modern DataTables (jQuery-free)\n    initializeModernDataTables();\n\n    // Initialize sample tables for demo\n    initializeSampleTables();\n  });\n}\n\n// Export utilities for external use\nexport { DOM };\n"],"names":["DOM","select","selector","document","querySelector","selectAll","querySelectorAll","exists","getAttribute","element","attr","addClass","className","classList","add","removeClass","remove","initializeModernDataTables","tableElements","length","initializedTables","forEach","table","dataTableInstance","config","getTableConfig","dataTable","DataTable","push","instance","error","customSearch","id","addEventListener","search","this","value","draw","filter","columnIndex","parseInt","column","exportConfig","dom","buttons","extend","text","destroy","newTable","on","e","datatable","row","showHide","update","node","window","innerWidth","searchInput","parentNode","placeholder","responsive","autoWidth","pagingType","language","lengthMenu","info","infoEmpty","infoFiltered","paginate","first","last","next","previous","emptyTable","zeroRecords","pageLength","searching","ordering","paging","updateTableData","tableId","newData","clear","rows","TableUtils","getTableData","data","toArray","addRow","rowData","removeRow","rowIndex","searchTable","searchTerm","exportTable","format","toLowerCase","button","trigger","destroyAllTables","reinitializeTable","initializeSampleTables","sampleData","demoContainer","tableHTML","map","cell","join","innerHTML"],"mappings":"4HAcK,MAACA,EAAM,CACVC,OAAQC,GAAYC,SAASC,cAAcF,GAC3CG,UAAWH,GAAY,IAAIC,SAASG,iBAAiBJ,IACrDK,OAAQL,GAAiD,OAArCC,SAASC,cAAcF,GAC3CM,aAAc,CAACC,EAASC,IAASD,GAASD,aAAaE,GACvDC,SAAU,CAACF,EAASG,IAAcH,GAASI,UAAUC,IAAIF,GACzDG,YAAa,CAACN,EAASG,IAAcH,GAASI,UAAUG,OAAOJ,IAO1D,SAASK,IAId,MAAMC,EAAgBlB,EAAIK,UAAU,qDAEpC,GAA6B,IAAzBa,EAAcC,OAEhB,OAGF,MAAMC,EAAoB,GA+B1B,OA7BAF,EAAcG,QAAQC,IACpB,IAEE,GAAIA,EAAMC,kBACR,OAIF,MAAMC,EAASC,EAAeH,GAGxBI,EAAY,IAAIC,EAAUL,EAAOE,GAGvCF,EAAMC,kBAAoBG,EAC1BN,EAAkBQ,KAAK,CAAEN,QAAOO,SAAUH,GAG5C,OAASI,GAET,IAwEF9B,EAAIK,UAAU,mBAAmBgB,QAAQC,IACvC,GAAIA,EAAMC,kBAAmB,CAC3B,MAAMG,EAAYJ,EAAMC,kBAGlBQ,EAAe/B,EAAIC,OAAO,uBAAuBqB,EAAMU,QACzDD,GACFA,EAAaE,iBAAiB,QAAS,WACrCP,EAAUQ,OAAOC,KAAKC,OAAOC,MAC/B,GAIFrC,EAAIK,UAAU,wBAAwBiB,EAAMU,QAAQX,QAAQiB,IAC1D,MAAMC,EAAcC,SAASxC,EAAIQ,aAAa8B,EAAQ,gBACtDA,EAAOL,iBAAiB,SAAU,WAChCP,EAAUe,OAAOF,GAAaL,OAAOC,KAAKC,OAAOC,MACnD,IAEJ,IAQFrC,EAAIK,UAAU,gCAAgCgB,QAAQC,IACpD,GAAKA,EAAMC,kBAIX,IAEE,MAAMG,EAAYJ,EAAMC,kBAGlBmB,EAAe,CACnBC,IAAK,SACLC,QAAS,CACP,CACEC,OAAQ,OACRC,KAAM,OACNlC,UAAW,4BAEb,CACEiC,OAAQ,MACRC,KAAM,MACNlC,UAAW,0BAEb,CACEiC,OAAQ,QACRC,KAAM,QACNlC,UAAW,0BAEb,CACEiC,OAAQ,MACRC,KAAM,MACNlC,UAAW,yBAEb,CACEiC,OAAQ,QACRC,KAAM,QACNlC,UAAW,yBAMjBc,EAAUqB,UACV,MAAMC,EAAW,IAAIrB,EAAUL,EAAO,IACjCG,EAAeH,MACfoB,IAGLpB,EAAMC,kBAAoByB,CAG5B,OAASlB,GAET,IAQF9B,EAAIK,UAAU,qBAAqBgB,QAAQC,IACzC,GAAKA,EAAMC,oBAIOD,EAAMC,kBAGd0B,GAAG,qBAAsB,SAAUC,EAAGC,EAAWC,EAAKC,EAAUC,GACpED,EAEFrD,EAAIW,SAASyC,EAAIG,OAAQ,oBAGzBvD,EAAIe,YAAYqC,EAAIG,OAAQ,mBAEhC,GAGwB,IAApBC,OAAOC,YAAkB,CAC3B,MAAMC,EAAc1D,EAAIC,OAAO,2BAA4BqB,EAAMqC,YAC7DD,IACFA,EAAYE,YAAc,YAC1B5D,EAAIW,SAAS+C,EAAa,mBAE9B,IAhLKtC,CACT,CAKA,SAASK,EAAeH,GAyCtB,MAAO,CAtCLuC,YAAY,EACZC,WAAW,EAGXC,WAAY,iBAGZC,SAAU,CACR9B,OAAQ,UACR+B,WAAY,sBACZC,KAAM,8CACNC,UAAW,8BACXC,aAAc,sCACdC,SAAU,CACRC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,SAAU,YAEZC,WAAY,6BACZC,YAAa,6BAIfhC,IACE,mIAeFiC,WATiBpC,SAASxC,EAAIQ,aAAac,EAAO,sBAAwB,GAU1EuD,UAT8D,UAA9C7E,EAAIQ,aAAac,EAAO,kBAUxCwD,SAT4D,UAA7C9E,EAAIQ,aAAac,EAAO,iBAUvCyD,OATwD,UAA3C/E,EAAIQ,aAAac,EAAO,eAUrC4C,KAToD,UAAzClE,EAAIQ,aAAac,EAAO,aAUnCuC,WATgE,UAA/C7D,EAAIQ,aAAac,EAAO,mBAW7C,CA+HO,SAAS0D,EAAgBC,EAASC,GACvC,MAAM5D,EAAQtB,EAAIC,OAAO,IAAIgF,KAC7B,IAAK3D,IAAUA,EAAMC,kBAEnB,OAAO,EAGT,IACE,MAAMG,EAAYJ,EAAMC,kBAYxB,OATAG,EAAUyD,QAGVzD,EAAU0D,KAAKtE,IAAIoE,GAGnBxD,EAAUW,QAGH,CACT,OAASP,GAEP,OAAO,CACT,CACF,CAKY,MAACuD,EAAa,CAIxB,YAAAC,CAAaL,GACX,MAAM3D,EAAQtB,EAAIC,OAAO,IAAIgF,KAC7B,OAAI3D,GAASA,EAAMC,kBACVD,EAAMC,kBAAkB6D,OAAOG,OAAOC,UAExC,EACT,EAKA,MAAAC,CAAOR,EAASS,GACd,MAAMpE,EAAQtB,EAAIC,OAAO,IAAIgF,KAC7B,SAAI3D,IAASA,EAAMC,oBACjBD,EAAMC,kBAAkB6B,IAAItC,IAAI4E,GAASrD,OAClC,GAGX,EAKA,SAAAsD,CAAUV,EAASW,GACjB,MAAMtE,EAAQtB,EAAIC,OAAO,IAAIgF,KAC7B,SAAI3D,IAASA,EAAMC,oBACjBD,EAAMC,kBAAkB6B,IAAIwC,GAAU5E,SAASqB,OACxC,GAGX,EAKA,WAAAwD,CAAYZ,EAASa,GACnB,MAAMxE,EAAQtB,EAAIC,OAAO,IAAIgF,KAC7B,SAAI3D,IAASA,EAAMC,oBACjBD,EAAMC,kBAAkBW,OAAO4D,GAAYzD,OACpC,GAGX,EAKA,WAAA0D,CAAYd,EAASe,EAAS,OAC5B,MAAM1E,EAAQtB,EAAIC,OAAO,IAAIgF,KAC7B,GAAI3D,GAASA,EAAMC,kBAAmB,CACpC,MAAMG,EAAYJ,EAAMC,kBAExB,OAAQyE,EAAOC,eACb,IAAK,MACHvE,EAAUwE,OAAO,gBAAgBC,UACjC,MACF,IAAK,QACHzE,EAAUwE,OAAO,kBAAkBC,UACnC,MACF,IAAK,MACHzE,EAAUwE,OAAO,gBAAgBC,UACjC,MACF,IAAK,QACHzE,EAAUwE,OAAO,kBAAkBC,UACnC,MACF,QAEE,OAAO,EAEX,OAAO,CACT,CACA,OAAO,CACT,EAKA,gBAAAC,GACEpG,EAAIK,UAAU,4BAA4BgB,QAAQC,IAC5CA,EAAMC,oBACRD,EAAMC,kBAAkBwB,UACxBzB,EAAMC,kBAAoB,OAIhC,EAKA,iBAAA8E,CAAkBpB,GAChB,MAAM3D,EAAQtB,EAAIC,OAAO,IAAIgF,KAC7B,GAAI3D,EAAO,CACLA,EAAMC,mBACRD,EAAMC,kBAAkBwB,UAG1B,MAAMrB,EAAY,IAAIC,EAAUL,EAAOG,EAAeH,IAItD,OAHAA,EAAMC,kBAAoBG,GAGnB,CACT,CACA,OAAO,CACT,GAMK,SAAS4E,IAEd,MAAMC,EAAa,CACjB,CAAC,WAAY,oBAAqB,WAAY,UAAW,cACzD,CAAC,aAAc,kBAAmB,gBAAiB,WAAY,cAC/D,CAAC,eAAgB,WAAY,cAAe,UAAW,cACvD,CAAC,eAAgB,iBAAkB,UAAW,UAAW,cACzD,CAAC,cAAe,kBAAmB,UAAW,WAAY,eAItDC,EAAgBxG,EAAIC,OAAO,yBACjC,GAAIuG,EAAe,CACjB,MAAMC,EAAY,wVAYVF,EACPG,IAAItD,GAAO,OAAOA,EAAIsD,OAAY,OAAOC,UAAaC,KAAK,YAC3DA,KAAK,8CAKNJ,EAAcK,UAAYJ,EAGR,IAAI9E,EAAU,cAAe,CAC7CkC,YAAY,EACZe,WAAY,EACZjC,IAAK,SACLC,QAAS,CAAC,OAAQ,MAAO,QAAS,MAAO,UAI7C,CACF,CAGwB,oBAAbzC,UACTA,SAAS8B,iBAAiB,mBAAoB,KAE5ChB,IAGAqF"}