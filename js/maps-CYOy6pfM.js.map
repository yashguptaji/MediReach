{"version":3,"file":"maps-CYOy6pfM.js","sources":["../../src/modules/maps.js"],"sourcesContent":["/**\n * Maps Module\n * Handles Leaflet map initialization and customization\n * Already modern JavaScript - extracted from init.js\n */\n\n/**\n * Initialize basic Leaflet maps\n * Modern JavaScript implementation\n */\nexport function initializeMaps() {\n  if (typeof L === 'undefined') {\n    console.warn('⚠️ Leaflet library not available');\n    return;\n  }\n\n  const maps = [];\n\n  // Initialize all map containers\n  document.querySelectorAll('[data-map], .leaflet-map').forEach(mapElement => {\n    try {\n      const mapId = mapElement.id || 'map_' + Date.now();\n      if (!mapElement.id) {\n        mapElement.id = mapId;\n      }\n\n      // Get configuration from data attributes\n      const lat = parseFloat(mapElement.getAttribute('data-lat')) || 40.7128;\n      const lng = parseFloat(mapElement.getAttribute('data-lng')) || -74.006;\n      const zoom = parseInt(mapElement.getAttribute('data-zoom')) || 13;\n      const markerTitle = mapElement.getAttribute('data-marker') || 'Location';\n\n      // Create map instance\n      const map = L.map(mapId).setView([lat, lng], zoom);\n\n      // Add OpenStreetMap tiles\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 19\n      }).addTo(map);\n\n      // Add marker if requested\n      if (mapElement.getAttribute('data-marker') !== 'false') {\n        const marker = L.marker([lat, lng]).addTo(map);\n        if (markerTitle) {\n          marker.bindPopup(markerTitle);\n        }\n      }\n\n      // Store map reference\n      maps.push({ id: mapId, map, element: mapElement });\n\n      console.log(`✅ Map initialized: ${mapId}`);\n    } catch (error) {\n      console.error('❌ Failed to initialize map:', error);\n    }\n  });\n\n  // Specific map implementations\n  initializeLocationMap();\n  initializeContactMap();\n  initializeWorldMapGDP();\n\n  return maps;\n}\n\n/**\n * Location/Office Map (if element exists)\n */\nfunction initializeLocationMap() {\n  const locationMapElement = document.getElementById('locationMap');\n  if (!locationMapElement) {\n    return;\n  }\n\n  try {\n    // Office location coordinates (example: New York)\n    const officeLocation = [40.7128, -74.006];\n\n    const locationMap = L.map('locationMap').setView(officeLocation, 15);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(locationMap);\n\n    // Add office marker\n    const officeMarker = L.marker(officeLocation).addTo(locationMap);\n    officeMarker.bindPopup('<b>Our Office</b><br>123 Business Street<br>New York, NY 10001');\n\n    // Custom map styling\n    locationMapElement.style.height = '400px';\n    locationMapElement.style.borderRadius = '8px';\n\n    console.log('✅ Location map initialized');\n  } catch (error) {\n    console.error('❌ Failed to initialize location map:', error);\n  }\n}\n\n/**\n * World Map GDP - Index Dashboard Map (if element exists)\n */\nfunction initializeWorldMapGDP() {\n  const worldMapElement = document.getElementById('world-map-gdp');\n  if (!worldMapElement) {\n    return;\n  }\n\n  // Check if map is already initialized\n  if (worldMapElement._leaflet_id) {\n    console.log('World GDP map already initialized, skipping...');\n    return;\n  }\n\n  try {\n    // World map centered on a global view\n    const worldCenter = [20, 0]; // Centered globally\n\n    const worldMap = L.map('world-map-gdp').setView(worldCenter, 2);\n\n    // Add tile layer with a nice style for world view\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors',\n      maxZoom: 18,\n      minZoom: 1\n    }).addTo(worldMap);\n\n    // Sample GDP/visitor data markers for major cities\n    const gdpLocations = [\n      { lat: 40.7128, lng: -74.006, city: 'New York', visitors: '2.1M', gdp: '$1.8T' },\n      { lat: 51.5074, lng: -0.1278, city: 'London', visitors: '1.8M', gdp: '$0.9T' },\n      { lat: 35.6762, lng: 139.6503, city: 'Tokyo', visitors: '1.5M', gdp: '$4.9T' },\n      { lat: 48.8566, lng: 2.3522, city: 'Paris', visitors: '1.2M', gdp: '$0.7T' },\n      { lat: 37.7749, lng: -122.4194, city: 'San Francisco', visitors: '0.8M', gdp: '$0.5T' },\n      { lat: -33.8688, lng: 151.2093, city: 'Sydney', visitors: '0.7M', gdp: '$0.4T' },\n      { lat: 55.7558, lng: 37.6176, city: 'Moscow', visitors: '0.6M', gdp: '$1.8T' }\n    ];\n\n    // Add markers for each location\n    gdpLocations.forEach(location => {\n      const marker = L.marker([location.lat, location.lng]).addTo(worldMap);\n\n      marker.bindPopup(`\n        <div style=\"text-align: center; min-width: 150px;\">\n          <h6 style=\"margin-bottom: 8px; color: #26B99A;\">${location.city}</h6>\n          <p style=\"margin: 4px 0; font-size: 12px;\">\n            <strong>Visitors:</strong> ${location.visitors}<br>\n            <strong>GDP:</strong> ${location.gdp}\n          </p>\n          <small style=\"color: #666;\">Click marker for details</small>\n        </div>\n      `);\n\n      // Add custom marker styling\n      marker.on('mouseover', function (e) {\n        this.openPopup();\n      });\n    });\n\n    // Disable zoom control for cleaner dashboard look\n    worldMap.zoomControl.setPosition('topright');\n\n    // Set max bounds to prevent excessive panning\n    const bounds = L.latLngBounds([\n      [-85, -180],\n      [85, 180]\n    ]);\n    worldMap.setMaxBounds(bounds);\n\n    console.log('✅ World GDP map initialized');\n    return worldMap;\n  } catch (error) {\n    console.error('❌ Failed to initialize world GDP map:', error);\n  }\n}\n\n/**\n * Contact Page Map (if element exists)\n */\nfunction initializeContactMap() {\n  const contactMapElement = document.getElementById('contactMap');\n  if (!contactMapElement) {\n    return;\n  }\n\n  try {\n    // Contact location coordinates\n    const contactLocation = [40.7589, -73.9851]; // Times Square example\n\n    const contactMap = L.map('contactMap').setView(contactLocation, 14);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(contactMap);\n\n    // Add contact marker\n    const contactMarker = L.marker(contactLocation).addTo(contactMap);\n    contactMarker.bindPopup(`\n      <div style=\"text-align: center;\">\n        <h6>Contact Us</h6>\n        <p>Visit us at our location</p>\n        <button onclick=\"window.open('https://maps.google.com?q=${contactLocation[0]},${contactLocation[1]}', '_blank')\" \n                class=\"btn btn-sm btn-primary\">\n          Get Directions\n        </button>\n      </div>\n    `);\n\n    // Disable zoom control for cleaner look\n    contactMap.zoomControl.setPosition('topright');\n\n    console.log('✅ Contact map initialized');\n  } catch (error) {\n    console.error('❌ Failed to initialize contact map:', error);\n  }\n}\n\n/**\n * Interactive Map with Multiple Markers\n * For locations/branches listing\n */\nexport function initializeMultiLocationMap(locations = []) {\n  const mapElement = document.getElementById('multiLocationMap');\n  if (!mapElement) {\n    return;\n  }\n\n  try {\n    // Default locations if none provided\n    const defaultLocations = [\n      {\n        lat: 40.7128,\n        lng: -74.006,\n        title: 'New York Office',\n        popup: 'Main Office<br>New York, NY'\n      },\n      {\n        lat: 34.0522,\n        lng: -118.2437,\n        title: 'Los Angeles Office',\n        popup: 'West Coast Office<br>Los Angeles, CA'\n      },\n      {\n        lat: 41.8781,\n        lng: -87.6298,\n        title: 'Chicago Office',\n        popup: 'Midwest Office<br>Chicago, IL'\n      }\n    ];\n\n    const mapLocations = locations.length > 0 ? locations : defaultLocations;\n\n    // Calculate center point\n    const centerLat = mapLocations.reduce((sum, loc) => sum + loc.lat, 0) / mapLocations.length;\n    const centerLng = mapLocations.reduce((sum, loc) => sum + loc.lng, 0) / mapLocations.length;\n\n    const multiMap = L.map('multiLocationMap').setView([centerLat, centerLng], 4);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(multiMap);\n\n    // Add markers for each location\n    mapLocations.forEach(location => {\n      const marker = L.marker([location.lat, location.lng]).addTo(multiMap);\n      if (location.popup) {\n        marker.bindPopup(location.popup);\n      }\n    });\n\n    // Fit map to show all markers\n    const group = new L.featureGroup(\n      multiMap.eachLayer(layer => {\n        if (layer instanceof L.Marker) {\n          return layer;\n        }\n      })\n    );\n    multiMap.fitBounds(group.getBounds().pad(0.1));\n\n    console.log('✅ Multi-location map initialized');\n    return multiMap;\n  } catch (error) {\n    console.error('❌ Failed to initialize multi-location map:', error);\n  }\n}\n\n/**\n * Map Utility Functions\n */\nexport const MapUtils = {\n  /**\n   * Convert address to coordinates (requires geocoding service)\n   */\n  async geocode(address) {\n    try {\n      // This would typically use a geocoding service\n      console.log(`Geocoding address: ${address}`);\n      // Return mock coordinates for now\n      return { lat: 40.7128, lng: -74.006 };\n    } catch (error) {\n      console.error('Geocoding failed:', error);\n      return null;\n    }\n  },\n\n  /**\n   * Calculate distance between two points\n   */\n  calculateDistance(lat1, lng1, lat2, lng2) {\n    const R = 6371; // Earth's radius in kilometers\n    const dLat = ((lat2 - lat1) * Math.PI) / 180;\n    const dLng = ((lng2 - lng1) * Math.PI) / 180;\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((lat1 * Math.PI) / 180) *\n        Math.cos((lat2 * Math.PI) / 180) *\n        Math.sin(dLng / 2) *\n        Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distance in kilometers\n  },\n\n  /**\n   * Add custom map controls\n   */\n  addCustomControls(map) {\n    // Custom zoom control\n    const customZoom = L.control.zoom({\n      position: 'topright'\n    });\n    customZoom.addTo(map);\n\n    // Custom scale control\n    L.control\n      .scale({\n        position: 'bottomright'\n      })\n      .addTo(map);\n\n    return { zoom: customZoom };\n  }\n};\n\n// Auto-initialize maps when DOM is ready\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', () => {\n    const mapElements = document.querySelectorAll(\n      '[data-map], .leaflet-map, #locationMap, #contactMap, #multiLocationMap, #world-map-gdp'\n    );\n    if (mapElements.length > 0) {\n      initializeMaps();\n    }\n  });\n}\n"],"names":["initializeMaps","L","maps","document","querySelectorAll","forEach","mapElement","mapId","id","Date","now","lat","parseFloat","getAttribute","lng","zoom","parseInt","markerTitle","map","setView","tileLayer","attribution","maxZoom","addTo","marker","bindPopup","push","element","error","locationMapElement","getElementById","officeLocation","locationMap","style","height","borderRadius","initializeLocationMap","contactLocation","contactMap","zoomControl","setPosition","initializeContactMap","worldMapElement","_leaflet_id","worldCenter","worldMap","minZoom","city","visitors","gdp","location","on","e","this","openPopup","bounds","latLngBounds","setMaxBounds","initializeWorldMapGDP","initializeMultiLocationMap","locations","defaultLocations","title","popup","mapLocations","length","centerLat","reduce","sum","loc","centerLng","multiMap","group","featureGroup","eachLayer","layer","Marker","fitBounds","getBounds","pad","MapUtils","geocode","address","calculateDistance","lat1","lng1","lat2","lng2","dLat","Math","PI","dLng","a","sin","cos","atan2","sqrt","addCustomControls","customZoom","control","position","scale","addEventListener"],"mappings":"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"}